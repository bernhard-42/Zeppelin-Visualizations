{"paragraphs":[{"text":"%pyspark\n\ndef versionCheck():\n    import sys\n    print(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\n    print(\"Spark:  \" + sc.version)\n\ndef display(html):\n    print(\"%angular\")\n    print(html)\n\ndef getNoteId():\n    return z.z.getInterpreterContext().getNoteId()\n\ndef getParagraphId():\n    return z.z.getInterpreterContext().getParagraphId()\n\n\n# The variable z holds the zeppelinContext. It is essential for all Angular based interactions - so let's save it :-)\nZEPPELIN_CONTEXT = z.z\n\n# In case one overwrites z, z = recoverZeppelinContext() gets the context back\ndef recoverZeppelinContext():\n    return PyZeppelinContext(ZEPPELIN_CONTEXT)\n\nversionCheck()\n","user":"bernhard","dateUpdated":"2017-03-12T17:15:11+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170310-211625_1358647492","result":{"code":"SUCCESS","type":"TEXT","msg":"Python: 3.5.2 |Anaconda 4.3.0 (64-bit)| (default, Jul  2 2016, 17:53:06)  - [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]\nSpark:  1.6.2\n"},"dateCreated":"2017-03-12T17:12:56+0000","dateStarted":"2017-03-12T17:15:11+0000","dateFinished":"2017-03-12T17:15:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3342","focus":true},{"title":"Initialize ZeppelinSession ...","text":"%pyspark\n\nfrom zeppelin_session import ZeppelinSession, resetZeppelinSession, LogLevel, Logger\n\n# resetZeppelinSession(z.z)\n\n# LogLevel().setLogLevel(\"DEBUG\")\n\nzs = ZeppelinSession(z.z)\n","user":"bernhard","dateUpdated":"2017-03-12T17:16:06+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170311-194627_996742250","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<div id=\"__Zeppelin_Session_2CBYXUPK2_Comm__\">{{__zeppelin_comm_2CBYXUPK2_status__}}</div>\n\n"},"dateCreated":"2017-03-12T17:12:56+0000","dateStarted":"2017-03-12T17:16:06+0000","dateFinished":"2017-03-12T17:16:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3343","focus":true},{"title":"... and start it in the next paragraph","text":"%pyspark\n\nzs.start()\n","dateUpdated":"2017-03-12T17:16:08+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170311-194708_2126183449","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3344","user":"bernhard","dateFinished":"2017-03-12T17:16:08+0000","dateStarted":"2017-03-12T17:16:08+0000","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<div>You should now see<br><span style=\"margin:20px\"><i>ZeppelinSession started (do not delete this paragraph)</i></span></br>in the paragraph above</div>\n\n<script>\n    var sessionCommVar = \"__zeppelin_comm_2CBYXUPK2_msg__\";\n    var sessionCommDivId = \"__Zeppelin_Session_2CBYXUPK2_Comm__\"\n    var execution_id = \"f020ab82-b194-4d6c-a789-10972fb3b31a\";                                                 // Avoid double execution\n    if(window.__zeppelin_already_executed__ == null) {                       //\n        window.__zeppelin_already_executed__ = [];                           //\n    }                                                                        //\n    if(!window.__zeppelin_already_executed__.includes(execution_id)) {       // Avoid double execution\n\n        // Get the angular scope of the session div element\n\n        console.log(\"Get scope for div id\" + sessionCommDivId);\n        var $scope = angular.element(document.getElementById(sessionCommDivId)).scope();\n\n        // make scope easily accessible in Web Console\n\n        window.__zeppelin_comm_scope = $scope;\n\n        // Remove any remaining watcher from last session\n\n        if(typeof(window.__zeppelin_notebook_unwatchers__) !== \"undefined\") {\n            console.info(\"ZeppelinSession: Cancel watchers\");\n            var unwatchers = window.__zeppelin_notebook_unwatchers__\n            for(i in unwatchers) {\n                unwatchers[i]();\n            }\n        }\n        \n        // Array to note all active watchers (as with their respective unwatcher function)\n\n        window.__zeppelin_notebook_unwatchers__ = [];\n\n        // Main Handler\n\n        console.info(\"Install Angular watcher for session comm var \" + sessionCommVar);\n        var unwatch = $scope.$watch(sessionCommVar, function(newValue, oldValue, scope) {\n            if(typeof(newValue) !== \"undefined\") {\n                // console.info(newValue);\n                if (newValue.task === \"call\") {\n\n                    // Format: newValue = {\"id\": int, task\":\"call\", \"msg\":{\"function\":\"func_name\", \"object\":\"json_object\", \"delay\":ms}}\n                    \n                    var data = newValue.msg;\n                    console.log(\"Calling function \" + data.function + \" with delay: \" + data.delay)\n\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        setTimeout(function() {\n                            $scope.__functions[data.function]($scope, data.object);\n                        }, data.delay);\n                    } else {\n                        console.error(\"Unknown function: \" + data.function + \"()\")\n                    }\n                    \n                } else if (newValue.task === \"register\") {\n                    // Format: newValue = {\"id\": int, task\":\"register\", \"msg\":{\"function\":\"func_name\", \"funcBody\":\"function_as_string\"}}\n                    \n                    var data = newValue.msg;\n                    console.log(\"Registering function \" + data.function)\n                    \n                    var func = eval(data.funcBody);\n                    $scope.__functions[data.function] = func;\n                    \n                } else if (newValue.task === \"unregister\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"unregister\", \"msg\":{\"function\":\"func_name\"}}\n                    \n                    var data = newValue.msg;\n                    console.log(\"Unregistering function \" + data.function)\n\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        delete $scope.__functions[data.function];\n                    }               \n                    \n                } else if (newValue.task === \"dump\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"dump\", \"msg\":{}}\n                    \n                    console.log(\"sessionCommDivId: \", sessionCommDivId);\n                    console.log(\"$scope: \", $scope);\n\n                } else {\n\n                    // Jupyter.notebook.kernel.session.handleMsg(newValue);\n\n                    console.error(\"Unknown task: \" + newValue.task)\n                }\n            }\n        }, true)\n\n        // Initialize the object that will hold the registered functions\n        $scope.__functions = {};\n        \n        // remember unwatch function to clean up later\n        window.__zeppelin_notebook_unwatchers__.push(unwatch)\n\n        // mark init as executed\n        window.__zeppelin_already_executed__.push(execution_id);            // Avoid double execution\n    } else {                                                                //\n        console.info(\"Angular script already executed, skipped\");           //\n    }                                                                       // Avoid double execution\n</script>\n\n"},"focus":true},{"text":"%md\n## 1 NVD3\n\n\nsee [http://nvd3.org/](http://nvd3.org/)","dateUpdated":"2017-03-12T17:16:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170311-202047_879496130","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3345","user":"bernhard","dateFinished":"2017-03-12T17:16:14+0000","dateStarted":"2017-03-12T17:16:14+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>1 NVD3</h2>\n<p>see <a href=\"http://nvd3.org/\">http://nvd3.org/</a></p>\n"},"focus":true},{"text":"%pyspark\n\nfrom zeppelin_viz.nvd3 import Nvd3\n\nnv = Nvd3()\n","dateUpdated":"2017-03-12T17:16:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170311-222115_730709984","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3346","user":"bernhard","dateFinished":"2017-03-12T17:16:17+0000","dateStarted":"2017-03-12T17:16:17+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<script src=\"http://cdn.rawgit.com/exupero/saveSvgAsPng/gh-pages/saveSvgAsPng.js\" type=\"text/javascript\"></script>\n<div>Downloaded http://cdn.rawgit.com/exupero/saveSvgAsPng/gh-pages/saveSvgAsPng.js to allow saving charts to PNG</div>\n"},"focus":true},{"text":"%pyspark\n#!zeppelin2md:images/scatter.gif\n\nimport numpy as np\nimport random\n\ndef randomData(groups, points): # number of groups and number of points per group\n    data = []\n    shapes = ['cross', 'triangle-up', 'triangle-down', 'diamond', 'square']\n    \n    return [{\"key\":      \"Group %d\" % i, \n             \"values\":   [{\"x\":     np.random.normal(0, 1, 1).item(0), \n                           \"y\":     np.random.normal(0, 1, 1).item(0),\n                           \"size\":  random.random(),\n                           \"shape\": shapes[j % 5] if (random.random() > 0.8) else \"circle\"} for j in range(points)],\n             \"slope\":     random.random() - 0.01,\n             \"intercept\": random.random() - 0.5} for i in range(groups)]\n \nspl = nv.scatterPlusLineChart()\nspl.plot(randomData(4,10))\n","dateUpdated":"2017-03-12T17:16:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170311-224715_1177335917","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3347","user":"bernhard","dateFinished":"2017-03-12T17:16:19+0000","dateStarted":"2017-03-12T17:16:19+0000","focus":true},{"text":"%pyspark\nspl.append(randomData(4,5))","dateUpdated":"2017-03-12T17:16:24+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170312-112248_1856292349","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3348","user":"bernhard","dateFinished":"2017-03-12T17:16:24+0000","dateStarted":"2017-03-12T17:16:24+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true},{"text":"%pyspark\nspl.saveAsPng(\"scatter\")","dateUpdated":"2017-03-12T17:16:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170312-171044_308224454","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3349","user":"bernhard","dateFinished":"2017-03-12T17:16:29+0000","dateStarted":"2017-03-12T17:16:29+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true},{"text":"%pyspark\n\nimport pandas as pd\nquantity =  [ \n        [ 1136005200000 , 1271000.0] , [ 1138683600000 , 1271000.0] , [ 1141102800000 , 1271000.0] , [ 1143781200000 , 0] , [ 1146369600000 , 0] , [ 1149048000000 , 0] , \n        [ 1151640000000 , 0] , [ 1154318400000 , 0] , [ 1156996800000 , 0] , [ 1159588800000 , 3899486.0] , [ 1162270800000 , 3899486.0] , [ 1164862800000 , 3899486.0] , [ 1167541200000 , 3564700.0] , \n        [ 1170219600000 , 3564700.0] , [ 1172638800000 , 3564700.0] , [ 1175313600000 , 2648493.0] , [ 1177905600000 , 2648493.0] , [ 1180584000000 , 2648493.0] , [ 1183176000000 , 2522993.0] , \n        [ 1185854400000 , 2522993.0] , [ 1188532800000 , 2522993.0] , [ 1191124800000 , 2906501.0] , [ 1193803200000 , 2906501.0] , [ 1196398800000 , 2906501.0] , [ 1199077200000 , 2206761.0] , \n        [ 1201755600000 , 2206761.0] , [ 1204261200000 , 2206761.0] , [ 1206936000000 , 2287726.0] , [ 1209528000000 , 2287726.0] , [ 1212206400000 , 2287726.0] , [ 1214798400000 , 2732646.0] , \n        [ 1217476800000 , 2732646.0] , [ 1220155200000 , 2732646.0] , [ 1222747200000 , 2599196.0] , [ 1225425600000 , 2599196.0] , [ 1228021200000 , 2599196.0] , [ 1230699600000 , 1924387.0] , \n        [ 1233378000000 , 1924387.0] , [ 1235797200000 , 1924387.0] , [ 1238472000000 , 1756311.0] , [ 1241064000000 , 1756311.0] , [ 1243742400000 , 1756311.0] , [ 1246334400000 , 1743470.0] , \n        [ 1249012800000 , 1743470.0] , [ 1251691200000 , 1743470.0] , [ 1254283200000 , 1519010.0] , [ 1256961600000 , 1519010.0] , [ 1259557200000 , 1519010.0] , [ 1262235600000 , 1591444.0] , \n        [ 1264914000000 , 1591444.0] , [ 1267333200000 , 1591444.0] , [ 1270008000000 , 1543784.0] , [ 1272600000000 , 1543784.0] , [ 1275278400000 , 1543784.0] , [ 1277870400000 , 1309915.0] , \n        [ 1280548800000 , 1309915.0] , [ 1283227200000 , 1309915.0] , [ 1285819200000 , 1331875.0] , [ 1288497600000 , 1331875.0] , [ 1291093200000 , 1331875.0] , [ 1293771600000 , 1331875.0] , \n        [ 1296450000000 , 1154695.0] , [ 1298869200000 , 1154695.0] , [ 1301544000000 , 1194025.0] , [ 1304136000000 , 1194025.0] , [ 1306814400000 , 1194025.0] , [ 1309406400000 , 1194025.0] , \n        [ 1312084800000 , 1194025.0] , [ 1314763200000 , 1244525.0] , [ 1317355200000 , 475000.0] , [ 1320033600000 , 475000.0] , [ 1322629200000 , 475000.0] , [ 1325307600000 , 690033.0] , \n        [ 1327986000000 , 690033.0] , [ 1330491600000 , 690033.0] , [ 1333166400000 , 514733.0] , [ 1335758400000 , 514733.0]\n    ]\n\nprice =  [ \n        [ 1136005200000 , 71.89] , [ 1138683600000 , 75.51] , [ 1141102800000 , 68.49] , [ 1143781200000 , 62.72] , [ 1146369600000 , 70.39] , [ 1149048000000 , 59.77] , \n        [ 1151640000000 , 57.27] , [ 1154318400000 , 67.96] , [ 1156996800000 , 67.85] , [ 1159588800000 , 76.98] , [ 1162270800000 , 81.08] , [ 1164862800000 , 91.66] , [ 1167541200000 , 84.84] , \n        [ 1170219600000 , 85.73] , [ 1172638800000 , 84.61] , [ 1175313600000 , 92.91] , [ 1177905600000 , 99.8] , [ 1180584000000 , 121.191] , [ 1183176000000 , 122.04] , [ 1185854400000 , 131.76] , \n        [ 1188532800000 , 138.48] , [ 1191124800000 , 153.47] , [ 1193803200000 , 189.95] , [ 1196398800000 , 182.22] , [ 1199077200000 , 198.08] , [ 1201755600000 , 135.36] , [ 1204261200000 , 125.02] , \n        [ 1206936000000 , 143.5] , [ 1209528000000 , 173.95] , [ 1212206400000 , 188.75] , [ 1214798400000 , 167.44] , [ 1217476800000 , 158.95] , [ 1220155200000 , 169.53] , [ 1222747200000 , 113.66] , \n        [ 1225425600000 , 107.59] , [ 1228021200000 , 92.67] , [ 1230699600000 , 85.35] , [ 1233378000000 , 90.13] , [ 1235797200000 , 89.31] , [ 1238472000000 , 105.12] , [ 1241064000000 , 125.83] , \n        [ 1243742400000 , 135.81] , [ 1246334400000 , 142.43] , [ 1249012800000 , 163.39] , [ 1251691200000 , 168.21] , [ 1254283200000 , 185.35] , [ 1256961600000 , 188.5] , [ 1259557200000 , 199.91] , \n        [ 1262235600000 , 210.732] , [ 1264914000000 , 192.063] , [ 1267333200000 , 204.62] , [ 1270008000000 , 235.0] , [ 1272600000000 , 261.09] , [ 1275278400000 , 256.88] , [ 1277870400000 , 251.53] , \n        [ 1280548800000 , 257.25] , [ 1283227200000 , 243.1] , [ 1285819200000 , 283.75] , [ 1288497600000 , 300.98] , [ 1291093200000 , 311.15] , [ 1293771600000 , 322.56] , [ 1296450000000 , 339.32] , \n        [ 1298869200000 , 353.21] , [ 1301544000000 , 348.5075] , [ 1304136000000 , 350.13] , [ 1306814400000 , 347.83] , [ 1309406400000 , 335.67] , [ 1312084800000 , 390.48] , [ 1314763200000 , 384.83] , \n        [ 1317355200000 , 381.32] , [ 1320033600000 , 404.78] , [ 1322629200000 , 382.2] , [ 1325307600000 , 405.0] , [ 1327986000000 , 456.48] , [ 1330491600000 , 542.44] , [ 1333166400000 , 599.55] , \n        [ 1335758400000 , 583.98] \n    ]\n    \nqDf = pd.DataFrame([{\"Date\":r[0], \"Quantity\":r[1]} for r in quantity])\npDf = pd.DataFrame([{\"Date\":r[0], \"Price\":r[1]} for r in price])\ndf = pd.merge(pDf, qDf, on=\"Date\")\ndf.head()\n","dateUpdated":"2017-03-12T17:16:41+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170312-104057_461513419","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3350","user":"bernhard","dateFinished":"2017-03-12T17:16:41+0000","dateStarted":"2017-03-12T17:16:41+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true},{"text":"%pyspark\n#!zeppelin2md:images/bar-line.gif\n\nlpb = nv.linePlusBarChart()\n\ndata = lpb.convert(df.iloc[0:50, :], \"Date\", line=\"Price\", bar=\"Quantity\")\nlpb.plot(data)\n","dateUpdated":"2017-03-12T17:18:48+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170312-110944_1509241829","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3351","user":"bernhard","dateFinished":"2017-03-12T17:18:48+0000","dateStarted":"2017-03-12T17:18:48+0000","focus":true},{"text":"%pyspark\n\nimport time\n\nfor i in range(50, 77, 5):\n    lpb.append(lpb.convert(df.iloc[i:i+5,:], \"Date\", line=\"Price\", bar=\"Quantity\"))\n    time.sleep(0.1)\n\n","dateUpdated":"2017-03-12T17:18:50+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776296_-1644641553","id":"20170312-111637_58311444","dateCreated":"2017-03-12T17:12:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:3352","user":"bernhard","dateFinished":"2017-03-12T17:18:51+0000","dateStarted":"2017-03-12T17:18:50+0000","result":{"code":"SUCCESS","type":"TEXT","msg":""},"focus":true},{"text":"%pyspark\nlpb.saveAsPng(\"bar-line\")\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170312-171150_1011865291","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3353"},{"text":"%md\n\n## 2 Bokeh\n\nsee [http://bokeh.pydata.org/](http://bokeh.pydata.org/)\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170311-202249_975177463","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3354"},{"text":"%pyspark\n\nfrom zeppelin_comm_layer import ZeppelinCommLayer, LogLevel\n\nLogLevel().setLogLevel(\"DEBUG\")\nzcl = ZeppelinCommLayer(z.z)\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170311-200132_1593072624","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3355"},{"text":"%pyspark\nzcl.start()","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170311-200216_1323528497","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3356"},{"text":"%pyspark\n\nimport zeppelin_viz\n\nfrom zeppelin_viz.bokeh import BokehStates\n\nBokehStates(z.z).initState()\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170310-211721_2102574075","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3357"},{"text":"%pyspark\n\nfrom bokeh.io import push_notebook, show, output_notebook\nfrom bokeh.layouts import row\nfrom bokeh.resources import Resources\nfrom bokeh.plotting import figure\n\noutput_notebook()\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170312-113828_618983973","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3358"},{"text":"%pyspark\n#!zeppelin2md:images/bokeh-1.gif\n\nopts = dict(plot_width=250, plot_height=250, min_border=0)\np1 = figure(**opts)\nr1 = p1.circle([1,2,3], [4,5,6], size=20)\n\np2 = figure(**opts)\nr2 = p2.circle([1,2,3], [4,5,6], size=20)\n\nhandle1 = show(row(p1, p2), notebook_handle=True)\n\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170310-214028_1268403790","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3359"},{"text":"%pyspark\n\nr1.glyph.fill_color = \"yellow\"\nr2.glyph.fill_color = \"orange\"\n\npush_notebook(handle=handle1)\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170310-214055_401217813","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3360"},{"text":"%pyspark\nprint(\"%html\")\nprint(\"\"\"<script src=\"http://cdn.rawgit.com/exupero/saveSvgAsPng/gh-pages/saveSvgAsPng.js\" type=\"text/javascript\"></script>\"\"\")","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776297_-1645026302","id":"20170312-080757_355719468","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3361"},{"text":"%pyspark\n","dateUpdated":"2017-03-12T17:12:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1489338776298_-1643872055","id":"20170312-164553_52703352","dateCreated":"2017-03-12T17:12:56+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:3362"}],"name":"Zeppelin-Viz","id":"2CBYXUPK2","angularObjects":{"2C27DN6PF:shared_process":[],"2C49UH56G:shared_process":[],"2C3ST4TYA:shared_process":[],"2C32ZU7YM:shared_process":[],"2C2E1VYCK:shared_process":[],"2C2V2GJUA:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}