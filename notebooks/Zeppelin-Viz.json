{"paragraphs":[{"text":"%pyspark\n\ndef versionCheck():\n    import sys\n    print(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\n    print(\"Spark:  \" + sc.version)\n\ndef display(html, style=None):\n    print(\"%angular\")\n    if isinstance(html, (tuple, list)):\n        html = \"\".join([\"\"\"<div style=\"display:inline; margin-left:%dpx\">%s</div>\"\"\" % (el[1], el[0]) for el in html])\n    if style is not None:\n        html = \"<%s>%s</%s>\" % (style, html, style)\n    print(html)\n\ndef getNoteId():\n    return z.z.getInterpreterContext().getNoteId()\n\ndef getParagraphId():\n    return z.z.getInterpreterContext().getParagraphId()\n\n\n# The variable z holds the zeppelinContext. It is essential for all Angular based interactions - so let's save it :-)\nZEPPELIN_CONTEXT = z.z\n\n# In case one overwrites z, z = recoverZeppelinContext() gets the context back\ndef recoverZeppelinContext():\n    return PyZeppelinContext(ZEPPELIN_CONTEXT)\n\nversionCheck()\n","user":"anonymous","dateUpdated":"2017-03-19T21:55:40+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489176985564_1909173599","id":"20170310-211625_1358647492","dateCreated":"2017-03-10T21:16:25+0100","dateStarted":"2017-03-19T21:55:40+0100","dateFinished":"2017-03-19T21:55:40+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:50983","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Python: 3.5.2 |Anaconda 4.3.0 (x86_64)| (default, Jul  2 2016, 17:52:12)  - [GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)]\nSpark:  2.1.0\n"}]}},{"title":"Initialize ZeppelinSession ...","text":"%pyspark\n\nfrom zeppelin_session import ZeppelinSession, resetZeppelinSession, LogLevel, Logger\n\nresetZeppelinSession(z.z)\n# LogLevel().setLogLevel(\"DEBUG\")\n\nzs = ZeppelinSession(z.z)\n","user":"anonymous","dateUpdated":"2017-03-19T21:55:41+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489257987408_1363878799","id":"20170311-194627_996742250","dateCreated":"2017-03-11T19:46:27+0100","dateStarted":"2017-03-19T21:55:41+0100","dateFinished":"2017-03-19T21:55:42+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:50984","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Resetting ZeppelinSession\n"},{"type":"ANGULAR","data":"<div id=\"__Zeppelin_Session_2CB9DMBZT_Comm__\">{{__zeppelin_comm_2CB9DMBZT_status__}}</div>\n\n"}]}},{"title":"... and start it in the next paragraph","text":"%pyspark\n\nzs.start()\n","user":"anonymous","dateUpdated":"2017-03-19T21:55:44+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489258028870_1470716400","id":"20170311-194708_2126183449","dateCreated":"2017-03-11T19:47:08+0100","dateStarted":"2017-03-19T21:55:44+0100","dateFinished":"2017-03-19T21:55:44+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:50985","results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div>You should now see<br><span style=\"margin:20px\"><i>ZeppelinSession started (do not delete this paragraph)</i></span></br>in the paragraph above</div>\n\n<script>\n    var sessionCommVar = \"__zeppelin_comm_2CB9DMBZT_msg__\";\n    var sessionCommDivId = \"__Zeppelin_Session_2CB9DMBZT_Comm__\"\n    var execution_id = \"de9f2bca-7e51-4e7e-b7c9-cc0297ea9533\";                                                 // Avoid double execution\n    if(window.__zeppelin_already_executed__ == null) {                       //\n        window.__zeppelin_already_executed__ = [];                           //\n    }                                                                        //\n    if(!window.__zeppelin_already_executed__.includes(execution_id)) {       // Avoid double execution\n\n        window.__zeppelin_session_debug = 0; // no debug output\n        var Logger = function(name) {\n            this.name = name;\n        }\n        Logger.prototype.info = function(msg) {\n            if (window.__zeppelin_session_debug > 0) {\n                console.info(this.name + \" [INFO] \" + msg)\n            }\n        }\n        Logger.prototype.debug = function(msg) {\n            if (window.__zeppelin_session_debug > 1) {\n                console.log(this.name + \" [DEBUG] \" + msg)\n            }\n        }\n        var logger = new Logger(\"ZeppelinSession\");\n\n        // Get the angular scope of the session div element\n\n        logger.debug(\"Get scope for div id\" + sessionCommDivId);\n        var $scope = angular.element(document.getElementById(sessionCommDivId)).scope();\n\n        // make scope easily accessible in Web Console\n\n        window.__zeppelin_comm_scope = $scope;\n\n        // Remove any remaining watcher from last session\n\n        if(typeof(window.__zeppelin_notebook_unwatchers__) !== \"undefined\") {\n            logger.info(\"ZeppelinSession: Cancel watchers\");\n            var unwatchers = window.__zeppelin_notebook_unwatchers__\n            for(i in unwatchers) {\n                unwatchers[i]();\n            }\n        }\n        \n        // Array to note all active watchers (as with their respective unwatcher function)\n\n        window.__zeppelin_notebook_unwatchers__ = [];\n\n        // Main Handler\n\n        logger.info(\"Install Angular watcher for session comm var \" + sessionCommVar);\n        var unwatch = $scope.$watch(sessionCommVar, function(newValue, oldValue, scope) {\n            if(typeof(newValue) !== \"undefined\") {\n                // logger.info(newValue);\n                if (newValue.task === \"call\") {\n\n                    // Format: newValue = {\"id\": int, task\":\"call\", \"msg\":{\"function\":\"func_name\", \"object\":\"json_object\", \"delay\":ms}}\n                    \n                    var data = newValue.msg;\n                    logger.debug(\"Calling function \" + data.function + \" with delay: \" + data.delay)\n\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        setTimeout(function() {\n                            $scope.__functions[data.function]($scope, data.object);\n                        }, data.delay);\n                    } else {\n                        console.error(\"Unknown function: \" + data.function + \"()\")\n                    }\n                    \n                } else if (newValue.task === \"register\") {\n                    // Format: newValue = {\"id\": int, task\":\"register\", \"msg\":{\"function\":\"func_name\", \"funcBody\":\"function_as_string\"}}\n                    \n                    var data = newValue.msg;\n                    logger.debug(\"Registering function \" + data.function)\n                    \n                    var func = eval(data.funcBody);\n                    $scope.__functions[data.function] = func;\n                    \n                } else if (newValue.task === \"unregister\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"unregister\", \"msg\":{\"function\":\"func_name\"}}\n                    \n                    var data = newValue.msg;\n                    logger.debug(\"Unregistering function \" + data.function)\n\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        delete $scope.__functions[data.function];\n                    }               \n                    \n                } else if (newValue.task === \"dump\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"dump\", \"msg\":{}}\n                    \n                    logger.debug(\"sessionCommDivId: \", sessionCommDivId);\n                    logger.debug(\"$scope: \", $scope);\n\n                } else {\n\n                    // Jupyter.notebook.kernel.session.handleMsg(newValue);\n\n                    console.error(\"Unknown task: \" + newValue.task)\n                }\n            }\n        }, true)\n\n        // Initialize the object that will hold the registered functions\n        $scope.__functions = {};\n        \n        // remember unwatch function to clean up later\n        window.__zeppelin_notebook_unwatchers__.push(unwatch)\n\n        // mark init as executed\n        window.__zeppelin_already_executed__.push(execution_id);            // Avoid double execution\n    } else {                                                                //\n        logger.info(\"Angular script already executed, skipped\");           //\n    }                                                                       // Avoid double execution\n</script>\n\n"}]}},{"text":"%md\n## 1 NVD3\n\n\nsee [http://nvd3.org/](http://nvd3.org/)","user":"anonymous","dateUpdated":"2017-03-19T21:55:47+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489260047540_1158748507","id":"20170311-202047_879496130","dateCreated":"2017-03-11T20:20:47+0100","dateStarted":"2017-03-19T21:55:47+0100","dateFinished":"2017-03-19T21:55:47+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:50986","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>1 NVD3</h2>\n<p>see <a href=\"http://nvd3.org/\">http://nvd3.org/</a></p>\n</div>"}]}},{"text":"%pyspark\n\nfrom zeppelin_viz.nvd3 import Nvd3\n\nnv = Nvd3()\n","user":"anonymous","dateUpdated":"2017-03-19T21:31:53+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489267275112_1189008739","id":"20170311-222115_730709984","dateCreated":"2017-03-11T22:21:15+0100","dateStarted":"2017-03-19T21:31:53+0100","dateFinished":"2017-03-19T21:31:53+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50987"},{"title":"Recommend to use NVD3 1.8.5 (note this might break %sql visualizations)","text":"%pyspark\nnv.reloadNVD3(\"1.8.5\")\n","user":"anonymous","dateUpdated":"2017-03-19T21:31:42+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489392883174_371770259","id":"20170313-091443_425317142","dateCreated":"2017-03-13T09:14:43+0100","dateStarted":"2017-03-13T15:26:24+0100","dateFinished":"2017-03-13T15:26:24+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50988"},{"text":"%pyspark\n\nx = np.linspace(0, 4*np.pi, 100)\n\ndf = pd.DataFrame({\"X\":x*1000, \"Sin\":np.sin(x), \"Cos\":np.cos(x), \"ArcTan\":np.arctan(x-2*np.pi)/3})\ndf.head()\n","user":"anonymous","dateUpdated":"2017-03-19T21:35:56+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489313384998_1342926252","id":"20170312-110944_1509241829","dateCreated":"2017-03-12T11:09:44+0100","dateStarted":"2017-03-19T21:35:56+0100","dateFinished":"2017-03-19T21:35:56+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50989"},{"text":"%pyspark\n#!zeppelin2md:images/lineChart-035.png\n\nl = nv.lineChart()\n\nconfig={\"height\":500, \"width\": 1024,\n        \"focusEnable\": False, \"color\":nv.c20b()[10:13], \n        \"yAxis\": {\"axisLabel\":\"f(x)\", \"tickFormat\":\",.2f\"}, \n        \"xAxis\":{\"axisLabel\":\"x\", \"tickFormat\":\",.2f\"}}\n        \nlineAttributes={\"area\":[True, False, True], \"fillOpacity\":[0.2, 0, 0.2], \"style\":[\"dashed\", \"dotted\", None]}\n\ndata = l.convert(data=l_df[:70], key=\"X\", values=[\"Sin\", \"Cos\", \"ArcTan\"],lineAttributes=lineAttributes)        \n\nl.plot({\"data\":data, \"config\":config})\n","user":"anonymous","dateUpdated":"2017-03-19T21:53:25+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489955712870_90362134","id":"20170319-213512_1704872663","dateCreated":"2017-03-19T21:35:12+0100","dateStarted":"2017-03-19T21:53:25+0100","dateFinished":"2017-03-19T21:53:25+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50990"},{"title":"Dynamically add data","text":"%pyspark\n\nimport time\n\nfor i in range(71,100):\n    time.sleep(0.1)\n    data = l.convert(data=l_df[i:i+1], key=\"X\", values=[\"Sin\", \"Cos\", \"ArcTan\"], lineAttributes=lineAttributes)\n    l.append({\"data\":data, \"config\":config})\n\n","user":"anonymous","dateUpdated":"2017-03-19T21:53:28+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489313797111_1613068349","id":"20170312-111637_58311444","dateCreated":"2017-03-12T11:16:37+0100","dateStarted":"2017-03-19T21:53:28+0100","dateFinished":"2017-03-19T21:53:31+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50991"},{"title":"The Javascript part","text":"%pyspark\nprint(l.funcBody)\n","user":"anonymous","dateUpdated":"2017-03-19T21:44:21+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489956227370_-294451352","id":"20170319-214347_1273848435","dateCreated":"2017-03-19T21:43:47+0100","dateStarted":"2017-03-19T21:44:20+0100","dateFinished":"2017-03-19T21:44:20+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50992"},{"text":"%md\n\n## 2 Bokeh\n\nsee [http://bokeh.pydata.org/](http://bokeh.pydata.org/)\n","user":"anonymous","dateUpdated":"2017-03-19T21:55:53+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489260169473_-643614555","id":"20170311-202249_975177463","dateCreated":"2017-03-11T20:22:49+0100","dateStarted":"2017-03-19T21:55:53+0100","dateFinished":"2017-03-19T21:55:53+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:50993","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>2 Bokeh</h2>\n<p>see <a href=\"http://bokeh.pydata.org/\">http://bokeh.pydata.org/</a></p>\n</div>"}]}},{"text":"%pyspark\n\nfrom zeppelin_comm_layer import ZeppelinCommLayer, LogLevel\n\nLogLevel().setLogLevel(\"DEBUG\")\nzcl = ZeppelinCommLayer(z.z)\n","user":"anonymous","dateUpdated":"2017-03-19T21:53:48+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489258892945_-323125823","id":"20170311-200132_1593072624","dateCreated":"2017-03-11T20:01:32+0100","dateStarted":"2017-03-19T21:53:48+0100","dateFinished":"2017-03-19T21:53:49+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50994"},{"text":"%pyspark\nzcl.start()","user":"anonymous","dateUpdated":"2017-03-19T21:53:51+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489258936715_-940601835","id":"20170311-200216_1323528497","dateCreated":"2017-03-11T20:02:16+0100","dateStarted":"2017-03-19T21:53:51+0100","dateFinished":"2017-03-19T21:53:52+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50995"},{"text":"%pyspark\n\nimport zeppelin_viz\n\nfrom zeppelin_viz.bokeh import BokehStates\n\nBokehStates(z.z).initState()\n","user":"anonymous","dateUpdated":"2017-03-19T21:53:55+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489177041634_493575126","id":"20170310-211721_2102574075","dateCreated":"2017-03-10T21:17:21+0100","dateStarted":"2017-03-19T21:53:55+0100","dateFinished":"2017-03-19T21:53:55+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50996"},{"text":"%pyspark\n\nfrom bokeh.io import push_notebook, show, output_notebook\nfrom bokeh.layouts import row\nfrom bokeh.resources import Resources\nfrom bokeh.plotting import figure\n\noutput_notebook()\n","user":"anonymous","dateUpdated":"2017-03-19T21:53:58+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489315108641_-1174755950","id":"20170312-113828_618983973","dateCreated":"2017-03-12T11:38:28+0100","dateStarted":"2017-03-19T21:53:58+0100","dateFinished":"2017-03-19T21:53:58+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50997"},{"text":"%pyspark\n#!zeppelin2md:images/bokeh-1.gif\n\nopts = dict(plot_width=250, plot_height=250, min_border=0)\np1 = figure(**opts)\nr1 = p1.circle([1,2,3], [4,5,6], size=20)\n\np2 = figure(**opts)\nr2 = p2.circle([1,2,3], [4,5,6], size=20)\n\nhandle1 = show(row(p1, p2), notebook_handle=True)\n\n","user":"anonymous","dateUpdated":"2017-03-19T21:55:09+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489178428288_-1791255955","id":"20170310-214028_1268403790","dateCreated":"2017-03-10T21:40:28+0100","dateStarted":"2017-03-19T21:55:09+0100","dateFinished":"2017-03-19T21:55:09+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50998"},{"text":"%pyspark\n\nr1.glyph.fill_color = \"yellow\"\nr2.glyph.fill_color = \"orange\"\n\npush_notebook(handle=handle1)\n","user":"anonymous","dateUpdated":"2017-03-19T21:55:11+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489178455466_-2080556480","id":"20170310-214055_401217813","dateCreated":"2017-03-10T21:40:55+0100","dateStarted":"2017-03-19T21:55:11+0100","dateFinished":"2017-03-19T21:55:11+0100","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:50999"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2017-03-12T16:45:53+0100","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1489333553788_-1855133065","id":"20170312-164553_52703352","dateCreated":"2017-03-12T16:45:53+0100","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:51000"}],"name":"Zeppelin-Viz","id":"2CB9DMBZT","angularObjects":{"2CA5R39SP:shared_process":[],"2C9PBPHP2:shared_process":[{"name":"__zeppelin_comm_2CB9DMBZT_status__","object":"ZeppelinSession started (do not delete this paragraph)","noteId":"2CB9DMBZT"},{"name":"__zeppelin_comm_2CB9DMBZT_msg__","object":{"msg":{"delay":200,"function":"__jupyterHandler","object":{"msg":{"data":"{\"references\": [], \"events\": [{\"attr\": \"fill_color\", \"new\": {\"value\": \"orange\"}, \"kind\": \"ModelChanged\", \"model\": {\"type\": \"Circle\", \"id\": \"bff06a9f-ff20-4901-9091-995ac5379913\"}}, {\"attr\": \"fill_color\", \"new\": {\"value\": \"yellow\"}, \"kind\": \"ModelChanged\", \"model\": {\"type\": \"Circle\", \"id\": \"13d2d0ef-33b9-43f6-b1fc-35a0ab84a0a2\"}}]}","target_name":"8cd5832a-9193-4cb8-ba7a-02c2c669b66c","comm_id":"ff173cee-a70d-4654-a5cb-7c24ecb970a8"},"task":"comm_msg"}},"task":"call","id":121},"noteId":"2CB9DMBZT"}],"2C9T35AYY:shared_process":[],"2CDENW1UJ:shared_process":[],"2CA3CRS2J:shared_process":[],"2CAVHABDX:shared_process":[],"2CARY5ZYS:shared_process":[],"2CB9RSR89:shared_process":[],"2CASZNT3R:shared_process":[],"2CA4UU9ZH:shared_process":[],"2CCYSWEBF:shared_process":[],"2CA17HE2U:shared_process":[],"2CCHGTGDY:shared_process":[],"2CACZ48YM:shared_process":[],"2C9R2RW8Y:shared_process":[],"2CCZZ351R:shared_process":[],"2C9RAHG2K:shared_process":[],"2CCWBCHAT:shared_process":[],"2C9MFUCEM:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}