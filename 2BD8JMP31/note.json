{
  "paragraphs": [
    {
      "text": "%md\n## Table of Contents\n\n### 1 Pretty print RDDs and DataFrames as with %sql Interpreter\n#### 1.1 A little convenience function \n#### 1.2 \"Pretty print\" an RDD without conversion and %sql Interpreter\n#### 1.3 Visualize an RDD without conversion and %sql Interpreter\n\n### 2 Integration of Visualization libraries into Zeppelin\n#### 2.1 Integratíon of Bokeh via HTML and Javascript\n#### 2.2 Integration of Vega via HTML and Javascript\n#### 2.3 Integratíon of MatplotLib via HTML and SVG\n",
      "dateUpdated": "Mar 8, 2016 7:27:08 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456580445075_-1398851329",
      "id": "20160227-144045_678497018",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eTable of Contents\u003c/h2\u003e\n\u003ch3\u003e1 Pretty print RDDs and DataFrames as with %sql Interpreter\u003c/h3\u003e\n\u003ch4\u003e1.1 A little convenience function\u003c/h4\u003e\n\u003ch4\u003e1.2 \u0026ldquo;Pretty print\u0026rdquo; an RDD without conversion and %sql Interpreter\u003c/h4\u003e\n\u003ch4\u003e1.3 Visualize an RDD without conversion and %sql Interpreter\u003c/h4\u003e\n\u003ch3\u003e2 Integration of Visualization libraries into Zeppelin\u003c/h3\u003e\n\u003ch4\u003e2.1 Integratíon of Bokeh via HTML and Javascript\u003c/h4\u003e\n\u003ch4\u003e2.2 Integration of Vega via HTML and Javascript\u003c/h4\u003e\n\u003ch4\u003e2.3 Integratíon of MatplotLib via HTML and SVG\u003c/h4\u003e\n"
      },
      "dateCreated": "Feb 27, 2016 2:40:45 PM",
      "dateStarted": "Mar 8, 2016 7:27:08 PM",
      "dateFinished": "Mar 8, 2016 7:27:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 1 Pretty print RDDs and DataFrames as with %sql Interpreter\n\n### 1.1 A little convenience function \n\n- Collect random samples of RDDs and DataFrames\n- Print RDDs and DataFrames in table form without switching to %sql by leveraging Zeppelin Display capabilities",
      "dateUpdated": "Mar 8, 2016 7:27:10 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456485135595_-1919500999",
      "id": "20160226-121215_594615189",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e1 Pretty print RDDs and DataFrames as with %sql Interpreter\u003c/h2\u003e\n\u003ch3\u003e1.1 A little convenience function\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCollect random samples of RDDs and DataFrames\u003c/li\u003e\n\u003cli\u003ePrint RDDs and DataFrames in table form without switching to %sql by leveraging Zeppelin Display capabilities\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Feb 26, 2016 12:12:15 PM",
      "dateStarted": "Mar 8, 2016 7:27:10 PM",
      "dateFinished": "Mar 8, 2016 7:27:10 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ndef pprint(data, num\u003d8, asTable\u003dFalse, columns\u003dNone, sampleRatio\u003dNone, seed\u003d42):\n\n    # If a sampleRatio is given, a random sample with given seed is selected\n    subset \u003d data.sample(False, fraction\u003dsampleRatio, seed\u003dseed) if sampleRatio else data\n\n    # If it is a DataFrame, convert rows to arras and extract headers\n    if \"rdd\" in dir(data): \n        columns \u003d subset.columns\n        subset \u003d subset.map(lambda row: list(row))\n        \n    # If num is -1 all records should be collected - avoid for big data ...\n    array \u003d subset.collect() if num \u003d\u003d -1 else subset.take(num)\n    \n    # If asTable is True, sql format with columns c0, c1, ... as output\n    # If columns is array of column names, sql format with given columns as output\n    if asTable or columns:\n        output \u003d \"\"\n        for d in array:\n            l \u003d len(d)\n            output +\u003d \"\\t\".join([str(x) for x in d]) + \"\\n\"\n        if columns:\n            header \u003d \"\\t\".join([h for h in columns]) + \"\\n\" \n        else:\n            header \u003d \"\\t\".join([\"c%0d\" %i for i in range(l) ]) + \"\\n\"\n        print \"%table \" + header + output\n    else:\n        for d in array:\n            print d",
      "dateUpdated": "Mar 4, 2016 5:01:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456485079659_714212492",
      "id": "20160226-121119_477306508",
      "dateCreated": "Feb 26, 2016 12:11:19 PM",
      "dateStarted": "Mar 4, 2016 5:01:43 PM",
      "dateFinished": "Mar 4, 2016 5:02:08 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 1.2 \"Pretty print\" an RDD without conversion and %sql Interpreter",
      "dateUpdated": "Mar 8, 2016 7:27:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456485485612_-1790737644",
      "id": "20160226-121805_1696984133",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e1.2 \u0026ldquo;Pretty print\u0026rdquo; an RDD without conversion and %sql Interpreter\u003c/h2\u003e\n"
      },
      "dateCreated": "Feb 26, 2016 12:18:05 PM",
      "dateStarted": "Mar 8, 2016 7:27:14 PM",
      "dateFinished": "Mar 8, 2016 7:27:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ndef parse(line):\n    m \u003d {u\u0027Iris-virginica\u0027:0, u\u0027Iris-setosa\u0027:1, u\u0027Iris-versicolor\u0027:2}\n    if len(line.strip()) \u003e 0:\n        parts \u003d line.split(\",\")\n        return [float(f) for f in parts[0:4]] + [parts[4], m[parts[4]]]\n    \niris \u003d sc.textFile(\"/tmp/iris.data\").filter(lambda line: len(line.strip()) \u003e 0).map(parse)\n\npprint(iris, num\u003d10, sampleRatio\u003d0.06, seed\u003d123, columns\u003d[\"sepal-length\", \"sepal-width\", \"petal-length\", \"petal-width\", \"name\", \"species\"])\n",
      "dateUpdated": "Mar 4, 2016 5:02:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "sepal-length",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "sepal-width",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "sepal-length",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "sepal-width",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456400692061_1787727548",
      "id": "20160225-124452_1108601832",
      "dateCreated": "Feb 25, 2016 12:44:52 PM",
      "dateStarted": "Mar 4, 2016 5:02:35 PM",
      "dateFinished": "Mar 4, 2016 5:02:38 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 1.3 Visualize an RDD without conversion and %sql Interpreter",
      "dateUpdated": "Mar 8, 2016 7:27:16 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456580382803_754680210",
      "id": "20160227-143942_1933704282",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e1.3 Visualize an RDD without conversion and %sql Interpreter\u003c/h2\u003e\n"
      },
      "dateCreated": "Feb 27, 2016 2:39:42 PM",
      "dateStarted": "Mar 8, 2016 7:27:16 PM",
      "dateFinished": "Mar 8, 2016 7:27:16 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\npprint(iris, num\u003d-1, columns\u003d[\"sepal-length\", \"sepal-width\", \"petal-length\", \"petal-width\", \"name\", \"species\"])\n",
      "dateUpdated": "Mar 4, 2016 4:28:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "scatterChart",
          "height": 300.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "sepal-length",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "sepal-width",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "sepal-length",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "sepal-width",
              "index": 1.0,
              "aggr": "sum"
            },
            "size": {
              "name": "petal-width",
              "index": 3.0,
              "aggr": "sum"
            },
            "group": {
              "name": "name",
              "index": 4.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456485985240_-1017659968",
      "id": "20160226-122625_1025301021",
      "dateCreated": "Feb 26, 2016 12:26:25 PM",
      "dateStarted": "Mar 4, 2016 4:28:32 PM",
      "dateFinished": "Mar 4, 2016 4:28:34 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 2 Integration of Visualization libraries into Zeppelin\n\n",
      "dateUpdated": "Mar 8, 2016 7:27:19 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456485101856_-616603305",
      "id": "20160226-121141_671139961",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e2 Integration of Visualization libraries into Zeppelin\u003c/h2\u003e\n"
      },
      "dateCreated": "Feb 26, 2016 12:11:41 PM",
      "dateStarted": "Mar 8, 2016 7:27:19 PM",
      "dateFinished": "Mar 8, 2016 7:27:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nirisDf \u003d sqlContext.createDataFrame(iris, [\"sepal-length\", \"sepal-width\", \"petal-length\", \"petal-width\", \"name\", \"species\"])\n",
      "dateUpdated": "Mar 4, 2016 4:28:39 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "sepal-length",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "sepal-width",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "sepal-length",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "sepal-width",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456683469560_-966448947",
      "id": "20160228-191749_1646294288",
      "dateCreated": "Feb 28, 2016 7:17:49 PM",
      "dateStarted": "Mar 4, 2016 4:28:39 PM",
      "dateFinished": "Mar 4, 2016 4:28:40 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2.1 Integration of Bokeh via HTML and javascript\n\nSee [Bokeh](http://bokeh.pydata.org/en/latest/)",
      "dateUpdated": "Mar 8, 2016 7:27:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581304647_1604648832",
      "id": "20160227-145504_1860362157",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e2.1 Integration of Bokeh via HTML and javascript\u003c/h3\u003e\n\u003cp\u003eSee \u003ca href\u003d\"http://bokeh.pydata.org/en/latest/\"\u003eBokeh\u003c/a\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 27, 2016 2:55:04 PM",
      "dateStarted": "Mar 8, 2016 7:27:21 PM",
      "dateFinished": "Mar 8, 2016 7:27:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ndef loadBokeh():\n\n    print \"\"\"%html\n    \u003clink rel\u003d\"stylesheet\" href\u003d\"https://cdn.pydata.org/bokeh/release/bokeh-0.11.0.min.css\" type\u003d\"text/css\" /\u003e\n    \u003cscript type\u003d\"text/javascript\" src\u003d\"https://cdn.pydata.org/bokeh/release/bokeh-0.11.0.min.js\"\u003e\u003c/script\u003e\n    \u003cdiv\u003eOK\u003c/div\u003e\n    \"\"\"\n    \n\ndef showBokeh(plot):\n    from bokeh.embed import components\n\n    script, div \u003d components(plot)\n    print \"%html \" + script + div",
      "dateUpdated": "Mar 4, 2016 5:13:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581328283_534493575",
      "id": "20160227-145528_176141506",
      "dateCreated": "Feb 27, 2016 2:55:28 PM",
      "dateStarted": "Mar 4, 2016 5:13:21 PM",
      "dateFinished": "Mar 4, 2016 5:13:21 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nloadBokeh()\n",
      "dateUpdated": "Mar 4, 2016 5:13:23 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581323420_-944865946",
      "id": "20160227-145523_1507854926",
      "dateCreated": "Feb 27, 2016 2:55:23 PM",
      "dateStarted": "Mar 4, 2016 5:13:23 PM",
      "dateFinished": "Mar 4, 2016 5:13:23 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nfrom bokeh.plotting import figure\nfrom bokeh.sampledata.iris import flowers\n\ncolormap \u003d {\u0027setosa\u0027: \u0027red\u0027, \u0027versicolor\u0027: \u0027green\u0027, \u0027virginica\u0027: \u0027blue\u0027}\ncolors \u003d [colormap[x] for x in flowers[\u0027species\u0027]]\n\np \u003d figure(title \u003d \"Iris Morphology\")\np.xaxis.axis_label \u003d \u0027Petal Length\u0027\np.yaxis.axis_label \u003d \u0027Petal Width\u0027\n\np.circle(flowers[\"petal_length\"], flowers[\"petal_width\"],\n         color\u003dcolors, fill_alpha\u003d0.2, size\u003d10)\n\nshowBokeh(p)",
      "dateUpdated": "Mar 4, 2016 4:28:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581319273_-603224247",
      "id": "20160227-145519_2009076777",
      "dateCreated": "Feb 27, 2016 2:55:19 PM",
      "dateStarted": "Mar 4, 2016 4:28:58 PM",
      "dateFinished": "Mar 4, 2016 4:29:03 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nimport bokeh\n\nprint \"Note: Uncomment the download once if you have never accessed bokeh.sampledata!\"\nbokeh.sampledata.download(False)  # progress doesn\u0027t work with Zeppelin",
      "dateUpdated": "Mar 4, 2016 5:02:48 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456682682470_1685124981",
      "id": "20160228-190442_674107721",
      "dateCreated": "Feb 28, 2016 7:04:42 PM",
      "dateStarted": "Mar 4, 2016 5:02:48 PM",
      "dateFinished": "Mar 4, 2016 5:06:17 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nfrom bokeh.models import HoverTool\nfrom bokeh.plotting import figure, show, output_file, ColumnDataSource\n\nfrom bokeh.sampledata.us_counties import data as counties\nfrom bokeh.sampledata.unemployment import data as unemployment\n\n\ncounties \u003d {\n    code: county for code, county in counties.items() if county[\"state\"] \u003d\u003d \"tx\"\n}\n\ncounty_xs \u003d [county[\"lons\"] for county in counties.values()]\ncounty_ys \u003d [county[\"lats\"] for county in counties.values()]\n\ncolors \u003d [\"#F1EEF6\", \"#D4B9DA\", \"#C994C7\", \"#DF65B0\", \"#DD1C77\", \"#980043\"]\n\ncounty_names \u003d [county[\u0027name\u0027] for county in counties.values()]\ncounty_rates \u003d [unemployment[county_id] for county_id in counties]\ncounty_colors \u003d [colors[int(rate/3)] for rate in county_rates]\n\nsource \u003d ColumnDataSource(data\u003ddict(\n    x\u003dcounty_xs,\n    y\u003dcounty_ys,\n    color\u003dcounty_colors,\n    name\u003dcounty_names,\n    rate\u003dcounty_rates,\n))\n\nTOOLS\u003d\"pan,resize,wheel_zoom,box_zoom,reset,hover,save\"\n\np \u003d figure(title\u003d\"Texas Unemployment 2009\", tools\u003dTOOLS)\n\np.patches(\u0027x\u0027, \u0027y\u0027, source\u003dsource,\n          fill_color\u003d\u0027color\u0027, fill_alpha\u003d0.7,\n          line_color\u003d\"white\", line_width\u003d0.5)\n\nhover \u003d p.select_one(HoverTool)\nhover.point_policy \u003d \"follow_mouse\"\nhover.tooltips \u003d [\n    (\"Name\", \"@name\"),\n    (\"Unemployment rate)\", \"@rate%\"),\n    (\"(Long, Lat)\", \"($x, $y)\"),\n]\n\nshowBokeh(p)",
      "dateUpdated": "Mar 4, 2016 4:29:26 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581316148_1754532337",
      "id": "20160227-145516_1402184954",
      "dateCreated": "Feb 27, 2016 2:55:16 PM",
      "dateStarted": "Mar 4, 2016 4:29:26 PM",
      "dateFinished": "Mar 4, 2016 4:29:28 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n## 2.2 Integration of Vega and Vega-Lite via HTML and Javascript\n\nSee [Vega](http://vega.github.io/vega/) and [Vega-Lite](https://vega.github.io/vega-lite/)\n\nSamples: [Online Editor and Samples](http://vega.github.io/vega-editor/)",
      "dateUpdated": "Mar 8, 2016 7:27:27 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581691848_-1744101614",
      "id": "20160227-150131_759537597",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e2.2 Integration of Vega and Vega-Lite via HTML and Javascript\u003c/h2\u003e\n\u003cp\u003eSee \u003ca href\u003d\"http://vega.github.io/vega/\"\u003eVega\u003c/a\u003e and \u003ca href\u003d\"https://vega.github.io/vega-lite/\"\u003eVega-Lite\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eSamples: \u003ca href\u003d\"http://vega.github.io/vega-editor/\"\u003eOnline Editor and Samples\u003c/a\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 27, 2016 3:01:31 PM",
      "dateStarted": "Mar 8, 2016 7:27:27 PM",
      "dateFinished": "Mar 8, 2016 7:27:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ndef loadVega():\n    html \u003d \"\"\"\n        \u003cscript src\u003d\"//d3js.org/d3.v3.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src\u003d\"//vega.github.io/vega/vega.js\"\u003e\u003c/script\u003e\n        \u003cscript src\u003d\"//vega.github.io/vega-lite/vega-lite.js\"\u003e\u003c/script\u003e\n        \u003cdiv\u003eOK\u003c/div\u003e\n    \"\"\"\n    \n    print \"%html \" + html\n\n\ndef showVega(spec, mode\u003d\"vega\"):\n    from uuid import uuid4\n    import json\n    \n    if isinstance(spec, dict):\n        spec \u003d json.dumps(spec)\n    \n    id \u003d \"vega_%s\" % uuid4().hex\n    \n    print \"\"\"%html\n\u003cscript\u003e\n  preprocessor \u003d function(spec, mode) {\n    return (mode \u003d\u003d \u0027vega\u0027) ? spec : vl.compile(spec).spec\n  }\n  var spec \u003d preprocessor(\"\"\" + spec + \"\"\" , \u0027%s\u0027);\n  vg.parse.spec(spec, function(error, chart) { chart({el:\"#%s\"}).update(); });\n\u003c/script\u003e\n\u003cdiv id\u003d\u0027%s\u0027\u003e\u003c/div\u003e\n\"\"\" % (mode, id, id)    # adding \u0027spec\u0027 as a format parameter here ends up in an error\n\n",
      "dateUpdated": "Mar 4, 2016 4:32:25 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456581312570_1556771403",
      "id": "20160227-145512_790214214",
      "dateCreated": "Feb 27, 2016 2:55:12 PM",
      "dateStarted": "Mar 4, 2016 4:32:25 PM",
      "dateFinished": "Mar 4, 2016 4:32:25 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nloadVega()\n",
      "dateUpdated": "Mar 4, 2016 4:32:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456582040681_2119669434",
      "id": "20160227-150720_854141281",
      "dateCreated": "Feb 27, 2016 3:07:20 PM",
      "dateStarted": "Mar 4, 2016 4:32:49 PM",
      "dateFinished": "Mar 4, 2016 4:32:49 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2.2.1 Vega\n\n**Note**: Plots are interactive",
      "dateUpdated": "Mar 8, 2016 7:27:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456652492588_-1624784145",
      "id": "20160228-104132_1541650042",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e2.2.1 Vega\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eNote\u003c/strong\u003e: Plots are interactive\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 28, 2016 10:41:32 AM",
      "dateStarted": "Mar 8, 2016 7:27:32 PM",
      "dateFinished": "Mar 8, 2016 7:27:32 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\navg \u003d irisDf.select(\"name\", \"sepal-length\", \"sepal-width\", \"petal-length\", \"petal-width\").groupBy(\"name\").mean()\npprint(avg)",
      "dateUpdated": "Mar 4, 2016 4:33:18 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": true,
          "keys": [],
          "values": [
            {
              "name": "avg(petal-width)",
              "index": 4.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "name",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "avg(sepal-length)",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456684036899_924607745",
      "id": "20160228-192716_1723460093",
      "dateCreated": "Feb 28, 2016 7:27:16 PM",
      "dateStarted": "Mar 4, 2016 4:32:52 PM",
      "dateFinished": "Mar 4, 2016 4:32:54 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\ndata \u003d []\nscales \u003d []\nmarks \u003d []\n\nvalues \u003d avg.select(\"avg(sepal-length)\").collect()\n\ndata.append(\n    { \n      \"name\": \"table\",\n      \"values\": list(v[0] for v in values), # [12, 23, 45, 6, 52, 69],\n      \"transform\": [{\"type\": \"pie\", \"field\": \"data\"}]\n    }\n)\n\nscales.append(\n    { \n      \"name\": \"r\",\n      \"type\": \"sqrt\",\n      \"domain\": {\"data\": \"table\", \"field\": \"data\"},\n      \"range\": [20, 100]\n    }\n)\n\nmarks.append(\n     {\n      \"type\": \"arc\",\n      \"from\": {\"data\": \"table\"},\n      \"properties\": {\n        \"enter\": {\n          \"x\": {\"field\": {\"group\": \"width\"}, \"mult\": 0.5},\n          \"y\": {\"field\": {\"group\": \"height\"}, \"mult\": 0.5},\n          \"startAngle\": {\"field\": \"layout_start\"},\n          \"endAngle\": {\"field\": \"layout_end\"},\n          \"innerRadius\": {\"value\": 20},\n          \"outerRadius\": {\"scale\": \"r\", \"field\": \"data\"},\n          \"stroke\": {\"value\": \"#fff\"}\n        },\n        \"update\": {\n          \"fill\": {\"value\": \"#ccc\"}\n        },\n        \"hover\": {\n          \"fill\": {\"value\": \"pink\"}\n        }\n      }\n    }\n)\n\nmarks.append(\n     {\n      \"type\": \"text\",\n      \"from\": {\"data\": \"table\"},\n      \"properties\": {\n        \"enter\": {\n          \"x\": {\"field\": {\"group\": \"width\"}, \"mult\": 0.5},\n          \"y\": {\"field\": {\"group\": \"height\"}, \"mult\": 0.5},\n          \"radius\": {\"scale\": \"r\", \"field\": \"data\", \"offset\": 8},\n          \"theta\": {\"field\": \"layout_mid\"},\n          \"fill\": {\"value\": \"#000\"},\n          \"align\": {\"value\": \"center\"},\n          \"baseline\": {\"value\": \"middle\"},\n          \"text\": {\"field\": \"data\"}\n        }\n      }\n    }\n)\n\nspec \u003d {\n  \"width\": 400,\n  \"height\": 400,\n  \"data\": data,\n  \"scales\": scales,\n  \"marks\": marks\n}\n\nshowVega(spec)\n",
      "dateUpdated": "Mar 4, 2016 4:33:22 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456582479450_-688989314",
      "id": "20160227-151439_481940706",
      "dateCreated": "Feb 27, 2016 3:14:39 PM",
      "dateStarted": "Mar 4, 2016 4:33:22 PM",
      "dateFinished": "Mar 4, 2016 4:33:22 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\n\nus10m \u003d \"https://vega.github.io/vega-tutorials/airports/data/us-10m.json\"\nflightsAirport \u003d \"https://vega.github.io/vega-tutorials/airports/data/flights-airport.csv\"\nairports \u003d \"https://vega.github.io/vega-tutorials/airports/data/airports.csv\"\n\ndata \u003d []\n\ndata.append({\n  \"format\": {\"feature\": \"states\", \"type\": \"topojson\"},\n  \"name\": \"states\",\n  \"transform\": [\n    {\n      \"projection\": \"albersUsa\",\n      \"scale\": 1200,\n      \"translate\": [450, 280],\n      \"type\": \"geopath\"\n    }\n  ],\n  \"url\": us10m\n})\n\ndata.append({\n  \"format\": {\"parse\": \"auto\", \"type\": \"csv\"},\n  \"name\": \"traffic\",\n  \"transform\": [\n    {\n      \"groupby\": [\"origin\"],\n      \"summarize\": [\n        {\n          \"as\": [\"flights\"],\n          \"field\": \"count\",\n          \"ops\": [\"sum\"]\n        }\n      ],\n      \"type\": \"aggregate\"\n    }\n  ],\n  \"url\": flightsAirport\n})\n\ndata.append({\n  \"format\": {\"parse\": \"auto\", \"type\": \"csv\"},\n  \"name\": \"airports\",\n  \"transform\": [\n    {\n      \"as\": [\"traffic\"],\n      \"keys\": [\"iata\"],\n      \"on\": \"traffic\",\n      \"onKey\": \"origin\",\n      \"type\": \"lookup\"\n    }, {\n      \"test\": \"datum.traffic !\u003d null\", \"type\": \"filter\"\n    }, {\n      \"lat\": \"latitude\",\n      \"lon\": \"longitude\",\n      \"projection\": \"albersUsa\",\n      \"scale\": 1200,\n      \"translate\": [450, 280],\n      \"type\": \"geo\"\n    }, {\n      \"test\": \"datum.layout_x !\u003d null \u0026\u0026 datum.layout_y !\u003d null\",\n      \"type\": \"filter\"\n    }, {\n      \"by\": \"-traffic.flights\", \"type\": \"sort\"\n    }, {\n      \"type\": \"voronoi\", \"x\": \"layout_x\", \"y\": \"layout_y\"\n    }\n  ],\n  \"url\": airports\n})\n\ndata.append({\n  \"format\": {\"parse\": \"auto\", \"type\": \"csv\"},\n  \"name\": \"routes\",\n  \"transform\": [\n    {\n      \"test\": \"hover \u0026\u0026 hover.iata \u003d\u003d datum.origin\",\n      \"type\": \"filter\"\n    }, {\n      \"as\": [\"_source\", \"_target\"],\n      \"keys\": [\"origin\", \"destination\"],\n      \"on\": \"airports\",\n      \"onKey\": \"iata\",\n      \"type\": \"lookup\"\n    }, {\n      \"test\": \"datum._source \u0026\u0026 datum._target\", \"type\": \"filter\"\n    }, {\n      \"type\": \"linkpath\"\n    }\n  ],\n  \"url\": flightsAirport\n})\n\nscales \u003d []\nscales.append({\n  \"domain\": {\"data\": \"traffic\", \"field\": \"flights\"},\n  \"name\": \"size\",\n  \"range\": [16, 1000],\n  \"type\": \"linear\"\n})\n\nmarks \u003d []\nmarks.append({\n  \"from\": {\"data\": \"states\"},\n  \"properties\": {\n    \"enter\": {\n      \"fill\": {\"value\": \"#dedede\"},\n      \"stroke\": {\"value\": \"white\"}\n    },\n    \"update\": {\n      \"path\": {\"field\": \"layout_path\"}\n    }\n  },\n  \"type\": \"path\"\n})\n\nmarks.append({\n  \"from\": {\"data\": \"airports\"},\n  \"properties\": {\n    \"enter\": {\n      \"fill\": {\"value\": \"steelblue\"},\n      \"fillOpacity\": {\"value\": 0.8},\n      \"size\": {\"field\": \"traffic.flights\", \"scale\": \"size\"},\n      \"stroke\": {\"value\": \"white\"},\n      \"strokeWidth\": {\"value\": 1.5}\n    },\n    \"update\": {\n      \"x\": {\"field\": \"layout_x\"},\n      \"y\": {\"field\": \"layout_y\"}\n    }\n  },\n  \"type\": \"symbol\"\n})\n\nmarks.append({\n  \"from\": {\"data\": \"airports\"},\n  \"name\": \"cell\",\n  \"properties\": {\n    \"enter\": {\n      \"fill\": {\"value\": \"transparent\"},\n      \"strokeWidth\": {\"value\": 0.35}\n    },\n    \"update\": {\n      \"path\": {\"field\": \"layout_path\"},\n      \"stroke\": {\"signal\": \"cell_stroke\"}\n    }\n  },\n  \"type\": \"path\"\n})\n\nmarks.append({\n  \"from\": {\"data\": \"routes\"},\n  \"interactive\": False,\n  \"properties\": {\n    \"enter\": {\n      \"path\": {\"field\": \"layout_path\"},\n      \"stroke\": {\"value\": \"black\"},\n      \"strokeOpacity\": {\"value\": 0.35}\n    }\n  },\n  \"type\": \"path\"\n})\n\n\nmarks.append({\n  \"interactive\": False,\n  \"properties\": {\n    \"enter\": {\n      \"align\": {\"value\": \"right\"},\n      \"fill\": {\"value\": \"black\"},\n      \"fontSize\": {\"value\": 20},\n      \"x\": {\"value\": 895},\n      \"y\": {\"value\": 0}\n    },\n    \"update\": {\n      \"text\": {\"signal\": \"title\"}\n    }\n  },\n  \"type\": \"text\"\n})\n\nsignals \u003d []\n\nsignals.append({\n  \"init\": None,\n  \"name\": \"hover\",\n  \"streams\": [\n    {\n      \"expr\": \"datum\", \"type\": \"@cell:mouseover\"\n    }, {\n      \"expr\": \"null\", \"type\": \"@cell:mouseout\"\n    }\n  ]\n})\n\n\nsignals.append({\n  \"init\": \"U.S. Airports, 2008\",\n  \"name\": \"title\",\n  \"streams\": [\n    {\n      \"expr\": \"hover ? hover.name + \u0027 (\u0027 + hover.iata + \u0027)\u0027 : \u0027U.S. Airports, 2008\u0027\",\n      \"type\": \"hover\"\n    }\n  ]\n})\n\n\nsignals.append({\n  \"init\": None,\n  \"name\": \"cell_stroke\",\n  \"streams\": [\n    {\n      \"expr\": \u0027cell_stroke ? null : \"brown\"\u0027,\n      \"type\": \"dblclick\"\n    }\n  ]\n})\n\nspec \u003d {\n  \"width\": 900,\n  \"height\": 560,\n  \"data\": data,\n  \"scales\": scales,\n  \"marks\": marks,\n  \"padding\": {\"bottom\": 0, \"left\": 0, \"right\": 0, \"top\": 25},\n  \"signals\": signals\n}\n\nshowVega(spec)\n\n",
      "dateUpdated": "Feb 28, 2016 8:39:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456597106767_580765108",
      "id": "20160227-191826_1579823271",
      "dateCreated": "Feb 27, 2016 7:18:26 PM",
      "dateStarted": "Feb 28, 2016 8:41:03 PM",
      "dateFinished": "Feb 28, 2016 8:41:12 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2.2.2 Vega Lite",
      "dateUpdated": "Mar 8, 2016 7:27:40 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456652578334_-405560853",
      "id": "20160228-104258_1512785741",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003e2.2.2 Vega Lite\u003c/h3\u003e\n"
      },
      "dateCreated": "Feb 28, 2016 10:42:58 AM",
      "dateStarted": "Mar 8, 2016 7:27:40 PM",
      "dateFinished": "Mar 8, 2016 7:27:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nfrom pyspark.sql.functions import lit\n\nirisDF \u003d sqlContext.createDataFrame(iris, [\"sepal-length\", \"sepal-width\", \"petal-length\", \"petal-width\", \"species\", \"name\"])\n\nstacked \u003d   irisDf.select(\"name\", irisDf[\"sepal-length\"].alias(\"value\")).withColumn(\"type\", lit(\"sepal-length\"))\\\n  .unionAll(irisDf.select(\"name\", irisDf[\"sepal-width\"].alias(\"value\")).withColumn(\"type\", lit(\"sepal-width\")))\\\n  .unionAll(irisDf.select(\"name\", irisDf[\"petal-length\"].alias(\"value\")).withColumn(\"type\", lit(\"petal-length\")))\\\n  .unionAll(irisDf.select(\"name\", irisDf[\"petal-width\"].alias(\"value\")).withColumn(\"type\", lit(\"petal-width\")))\n",
      "dateUpdated": "Mar 4, 2016 4:33:57 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456687360626_796816915",
      "id": "20160228-202240_2054928537",
      "dateCreated": "Feb 28, 2016 8:22:40 PM",
      "dateStarted": "Mar 4, 2016 4:33:57 PM",
      "dateFinished": "Mar 4, 2016 4:33:57 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nvalues \u003d stacked.map(lambda r: r.asDict())\n\ndata \u003d {\"values\": values.collect()}\n\nencoding \u003d {\n    \"column\": {\"field\": \"type\", \"type\": \"ordinal\"},\n    \"x\":   {\"aggregate\": \"mean\", \"field\": \"value\", \"type\": \"quantitative\"},\n    \"y\":   {\"field\": \"name\", \"type\": \"ordinal\"}\n}\n\nspec \u003d {\n    \"data\": data,\n    \"mark\": \"point\",\n    \"encoding\": encoding\n}\n    \nshowVega(spec, \"vega-lite\")",
      "dateUpdated": "Mar 4, 2016 4:33:59 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456652453318_1376410518",
      "id": "20160228-104053_349845975",
      "dateCreated": "Feb 28, 2016 10:40:53 AM",
      "dateStarted": "Mar 4, 2016 4:33:59 PM",
      "dateFinished": "Mar 4, 2016 4:33:59 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 2.3 Integration of MatplotLib via HTML and SVG\n\nSee [Matplotlib](http://matplotlib.org/)",
      "dateUpdated": "Mar 8, 2016 7:27:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456599704328_-593653059",
      "id": "20160227-200144_1840796022",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e2.3 Integration of MatplotLib via HTML and SVG\u003c/h2\u003e\n\u003cp\u003eSee \u003ca href\u003d\"http://matplotlib.org/\"\u003eMatplotlib\u003c/a\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 27, 2016 8:01:44 PM",
      "dateStarted": "Mar 8, 2016 7:27:44 PM",
      "dateFinished": "Mar 8, 2016 7:27:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nimport matplotlib\nmatplotlib.use(\u0027Agg\u0027)\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport StringIO\n\ndef showMPL(plot):\n    img \u003d StringIO.StringIO()\n    plot.savefig(img, format\u003d\u0027svg\u0027)\n    img.seek(0)\n    print \"%html \u003cdiv style\u003d\u0027width:600px\u0027\u003e\" + img.buf + \"\u003c/div\u003e\"\n",
      "dateUpdated": "Feb 28, 2016 8:43:17 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456688523008_-1677444730",
      "id": "20160228-204203_910454099",
      "dateCreated": "Feb 28, 2016 8:42:03 PM",
      "dateStarted": "Feb 28, 2016 8:43:18 PM",
      "dateFinished": "Feb 28, 2016 8:43:21 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nX \u003d np.array(iris.map(lambda row: [row[i] for i in range(4)]).collect())\nY \u003d np.array(iris.map(lambda row: row[5]).collect())\n",
      "dateUpdated": "Feb 28, 2016 8:43:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456688528520_831118099",
      "id": "20160228-204208_2069593670",
      "dateCreated": "Feb 28, 2016 8:42:08 PM",
      "dateStarted": "Feb 28, 2016 8:43:35 PM",
      "dateFinished": "Feb 28, 2016 8:43:39 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nfrom mpl_toolkits.mplot3d import Axes3D\n\nx_min, x_max \u003d X[:, 0].min() - .5, X[:, 0].max() + .5\ny_min, y_max \u003d X[:, 1].min() - .5, X[:, 1].max() + .5\n\nplt.figure(2, figsize\u003d(8, 6))\nplt.clf()\n\n# Plot the training points\nplt.scatter(X[:, 0], X[:, 1], c\u003dY, cmap\u003dplt.cm.Paired)\nplt.xlabel(\u0027Sepal length\u0027)\nplt.ylabel(\u0027Sepal width\u0027)\n\nplt.xlim(x_min, x_max)\nplt.ylim(y_min, y_max)\nplt.xticks(())\nplt.yticks(())\n\nshowMPL(plt)",
      "dateUpdated": "Feb 28, 2016 8:43:55 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456688533200_-923890201",
      "id": "20160228-204213_1224427447",
      "dateCreated": "Feb 28, 2016 8:42:13 PM",
      "dateStarted": "Feb 28, 2016 8:43:56 PM",
      "dateFinished": "Feb 28, 2016 8:44:00 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457108087670_-1609093609",
      "id": "20160304-171447_133670874",
      "dateCreated": "Mar 4, 2016 5:14:47 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Visualization",
  "id": "2BD8JMP31",
  "angularObjects": {
    "2AXJWX8UE": [],
    "2AYJU33A2": [],
    "2AZHQMDRQ": [],
    "2AWXZJ28K": []
  },
  "config": {
    "looknfeel": "default",
    "cron": ""
  },
  "info": {}
}